/*
 * Application.c
 *
 *  Created on: Mar 7, 2024
 *      Author: moham
 */


#include "Application.h"


enum GearBox_State {N_GearBox,D_GearBox,R_GearBox};
enum ACCS_State {ACCS_Disable,ACCS_Enable};


void App_Init(void)
{
    /*  Intialize LCD   */
    LCD_init();

    /* Initialize Button Accelerate & ACCS & GearBox    */
    BUTTON_Init(Accelerate_BTN_PORT,Accelerate_BTN_PIN,INPUT_PIN);
    BUTTON_Init(ACCS_BTN_PORT,ACCS_BTN_PIN,INPUT_PIN);
    BUTTON_Init(GearBox_BTN_PORT,GearBox_BTN_PIN,INPUT_PIN);

    /*  Initialize Braking Button with EXT_INT 1    */
    INT1_init(FALLING_EDGE_TRIGGER,INPUT_PIN);

    /*  Initialize LEDS(BLUE,Red,Green,Yellow) all os them connected positive logic */
    LED_Init(Blue_LED_PORT,BLUE_LED_PIN);
    LED_Init(Red_LED_PORT,Red_LED_PIN);
    LED_Init(Green_LED_PORT,Green_LED_PIN);
    LED_Init(Yellow_LED_PORT,Yellow_LED_PIN);

    /*  Turn Of all of this led  */
    LED_OnOffPositiveLogic(Blue_LED_PORT,BLUE_LED_PIN, LED_OFF);
    LED_OnOffPositiveLogic(Red_LED_PORT,Red_LED_PIN, LED_OFF);
    LED_OnOffPositiveLogic(Green_LED_PORT,Green_LED_PIN, LED_OFF);
    LED_OnOffPositiveLogic(Yellow_LED_PORT,Yellow_LED_PIN, LED_OFF);


    /*  Intialize Bash Board for Car*/
    DashBoard_Init();
}



void DashBoard_Init(void)
{
    /*  Display GearBox Current state  */
    LCD_MoveCursor(0,0);
    LCD_DisplayString((const uint8 * )"GearBox(N,D,R) : N");

    LCD_MoveCursor(1,0);
    LCD_DisplayString((const uint8 * )"Speed : 0");

    LCD_MoveCursor(2,0);
    LCD_DisplayString((const uint8 * )"ACCS(ON,OFF) : OFF");

    /*  To display Distance */
    // LCD_MoveCursor(3,0);
    // LCD_DisplayString((const uint8 * )"Distnace : 0");
}



void Test_B(void)
{
    uint8 ACCS_State_bTN = BUTTON_GetValue(ACCS_BTN_PORT,ACCS_BTN_PIN);
    static uint8 ACCS_BTN_IsPressed = LOGIC_LOW ;
    if(ACCS_State_bTN == LOGIC_LOW)
    {
        if(ACCS_BTN_IsPressed == LOGIC_LOW)
        {
            LED_Toggle(Green_LED_PORT,Green_LED_PIN);
            ACCS_BTN_IsPressed = LOGIC_HIGH ;
        }
    }
    else
    {
        ACCS_BTN_IsPressed = LOGIC_LOW ;
    }

}



